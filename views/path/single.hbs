  <section class="path-page">
    <h1>{{value.name}}</h1>
    <p><strong>{{value.type}} experience</strong></p>
    <img src="{{value.picture}}" alt="Path Picture">
    <p class="path-description">{{value.description}}</p>
    <p>Created by {{value.author}} on {{ date value.creationDate 'DD/MM/YYYY' }}</p>
    <p> Approximate Duration: {{ value.duration }}</p>

    <div class="bottom">
      <strong>Mode of Travel: </strong>
      <select id="mode">
        <option value="DRIVING">Driving</option>
        <option value="WALKING">Walking</option>
        <option value="BICYCLING">Bicycling</option>
        <option value="TRANSIT">Transit</option>
      </select>
    </div>

    <div class="d-flex button">
        <button id="submit">SUBMIT</button>
        {{#if isOwnExperience}}
        <a href="/path/{{value._id}}/edit"><button id="edit">Edit</button></a>  
       <form action="/path/{{value._id}}/delete" method="POST">
          <button>Delete</button>
        </form>   
        {{/if}}
    </div>

</section>

<div id="map" class="single-map"></div>
    
<script>

function initMap() {
  var directionsService = new google.maps.DirectionsService;
  var directionsRenderer = new google.maps.DirectionsRenderer;
  var myLatLng = {lat: {{value.location.[0].lat}}, lng:parseInt({{value.location.[0].lng}})};
  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 10,
    center: myLatLng
  });
  directionsRenderer.setMap(map);

  document.getElementById('mode').addEventListener('change', function() {
  calculateAndDisplayRoute(directionsService, directionsRenderer);
  });


  document.getElementById('submit').addEventListener('click', function() {
    calculateAndDisplayRoute(directionsService, directionsRenderer);
});
}

function calculateAndDisplayRoute(directionsService, directionsRenderer) {
  let selectedMode = document.getElementById('mode').value;
  
  let waypts = [];
  let origin;
  let destination;
  if({{value.location.length}} > 2){
    
  {{#each value.location}}
  
  waypts.push({
    location: {
      lat: {{lat}},
      lng:{{lng}}
    }
  });
  {{/each}}

  origin = waypts.shift();
  destination = waypts.pop();
  } else {
    origin = {
      location: {
      lat: {{value.location.[0].lat}},
      lng:{{value.location.[0].lng}}
    }
    };
    destination =  {
      lat: {{value.location.[1].lat}},
      lng:{{value.location.[1].lng}}
    }
  }
  
  directionsService.route({
    origin: origin,
    destination: destination,
    waypoints: waypts,
    travelMode: google.maps.TravelMode[selectedMode]
  }, function(response, status) {
    if (status === 'OK') {
      directionsRenderer.setDirections(response);
      var route = response.routes[0];
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key={{google}}&libraries=places&callback=initMap" async defer>
    </script>